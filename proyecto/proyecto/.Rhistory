library(tidyverse)
library(forecast)
library(LSTS)
library(splines)
df = rio::import("data.xlsx")
lr <- df$Dx_6_L_R
r_500 <- df$Dx_6_R500
Y <- ts(df$Dx_6_R500, start = c(2016,1), frequency = 12, end = c(2021,12))
df$tiempo = c(1:72, rep(NA, 108))
library(lmtest)
bptest(lm(Y[1:72]~df$tiempo[1:72])) # No rechazamos la no homocedasticidad
# De igual manera intentamos
# Box cox
par(mfrow = c(1,1))
plot(BoxCox(Y, lambda = "auto"))
library(car)
lambda <- BoxCox.lambda(Y)
boxCox(lm(Dx_6_L_R ~ tiempo, data = df))
lynx.fit <- ar(BoxCox(Y,lambda))
plot(forecast(lynx.fit,h=20,lambda=lambda))
lr.ts <- ts(lr,start=c(2016,01), end=c(2021,12), frequency = 12)
plot(lr.ts)
par(mfrow = c(1,1))
acf(lr.ts,lag=100)
pacf(lr.ts,lag=100)
r500.ts <- ts(r_500,start=c(2016,01), end=c(2021,12), frequency = 12)
plot(r500.ts)
acf(r500.ts,lag=100)
pacf(r500.ts,lag=100)
par(mfrow = c(1,1))
mod1_lr <- auto.arima(lr.ts) #Todas las variables son significativas
mod1_r500 <- auto.arima(r500.ts) #Todas las variables son significativas
periodogram(lr.ts)
aux = periodogram(diff(lr.ts))
plot(diff(lr.ts))
periodogram(diff(lr.ts))
par(mfrow = c(1,1))
plot(aux$periodogram, type = "l")
abline(v = 30)
abline(v = 12)
aux2 = periodogram(diff(diff(lr.ts),lag = 12, differences = 1))
library(tidyverse)
library(forecast)
library(LSTS)
library(splines)
df = rio::import("data.xlsx")
lr <- df$Dx_6_L_R
r_500 <- df$Dx_6_R500
Y <- ts(df$Dx_6_R500, start = c(2016,1), frequency = 12, end = c(2021,12))
plot(lr)
plot(lr, type = "l")
plot(r_500, type = "l")
library(lmtest)
bptest(lm(Y[1:72]~df$tiempo[1:72])) # No rechazamos la no homocedasticidad
Y <- ts(df$Dx_6_R500, start = c(2016,1), frequency = 12, end = c(2021,12))
df$tiempo = c(1:72, rep(NA, 108))
library(lmtest)
bptest(lm(Y[1:72]~df$tiempo[1:72])) # No rechazamos la no homocedasticidad
# De igual manera intentamos
# Box cox
par(mfrow = c(1,1))
plot(BoxCox(Y, lambda = "auto"))
library(car)
lambda <- BoxCox.lambda(Y)
boxCox(lm(Dx_6_L_R ~ tiempo, data = df))
plot(forecast(lynx.fit,h=20,lambda=lambda))
''
''
lr.ts <- ts(lr,start=c(2016,01), end=c(2021,12), frequency = 12)
plot(lr.ts)
par(mfrow = c(1,1))
acf(lr.ts,lag=100)
pacf(lr.ts,lag=100)
r500.ts <- ts(r_500,start=c(2016,01), end=c(2021,12), frequency = 12)
plot(r500.ts)
acf(r500.ts,lag=100)
pacf(r500.ts,lag=100)
periodogram(lr.ts)
aux = periodogram(diff(lr.ts))
plot(diff(lr.ts))
periodogram(diff(lr.ts))
par(mfrow = c(1,1))
plot(aux$periodogram, type = "l")
abline(v = 30)
abline(v = 12)
aux2 = periodogram(diff(diff(lr.ts),lag = 12, differences = 1))
plot(aux2$periodogram, type = "l")
plot(aux2$periodogram, type = "l")
abline(v = 2)
Y <- ts(df$Dx_6_L_R[1:82], start = c(2016,1), frequency = 12, end = c(2021,12))
Y <- ts(df$Dx_6_L_R[1:70])
# d
forecast::ndiffs(Y)
plot(diff(Y), col = "gray", lwd = 1, type = "l")
acf(diff(Y), na.action = na.pass, lag.max = 60)
pacf(diff(Y), lag.max = 60)
plot(diff(Y), col = "gray", lwd = 1, type = "l")
acf(diff(Y), na.action = na.pass, lag.max = 60)
pacf(diff(Y), lag.max = 60)
forecast::nsdiffs(diff(Y))
Y <- ts(df$Dx_6_L_R[1:82], start = c(2016,1), frequency = 12, end = c(2021,12))
# d
forecast::ndiffs(Y)
plot(diff(Y), col = "gray", lwd = 1, type = "l")
acf(diff(Y), na.action = na.pass, lag.max = 60)
pacf(diff(Y), lag.max = 60)
forecast::nsdiffs(diff(Y))
plot(diff(diff(Y), lag = frequency(Y)), col = "gray", lwd = 3)
acf(diff(diff(Y), lag = frequency(Y)), na.action = na.pass, lag.max = 60)
pacf(diff(diff(Y), lag = frequency(Y)), na.action = na.pass, lag.max = 60)
fit <- forecast::auto.arima(Y, max.d = 6, max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL)
fit
pre <- forecast::forecast(fit, h = 100, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre)
plot(fit)
source("TS.diag.R")
TS.diag(fit$res)
library(nortest)
lillie.test(fit$residuals)
plot(Y[1:72], type = "l")
par(mfrow = c(1,1))
plot(Y[1:72], type = "l")
plot(lr[1:72], type = "l")
plot(r_500[1:72], type = "l")
Data <- rio::import("IMACEC_NM.xlsx")
head(Data)
Y <- ts(Data$IMACEC_NM, start = c(2013,1), frequency = 12, end = c(2021,12))
plot(Y, col = "gray", lwd = 3)
Y[time(Y) >= 2020 & time(Y) < 2021 + (4-1)/12] = NA
par(mfrow = c(1,1), bty = "n", las = 1)
plot(Y, col = "gray", lwd = 3)
par(mfrow = c(1,2), bty = "n", las = 1)
acf(Y, na.action = na.pass, lag.max = 48, ylim = c(-1,+1), main = "")
pacf(Y, na.action = na.pass, lag.max = 100, ylim = c(-1,+1), main = "")
## ¿d? ##
forecast::ndiffs(Y)
plot(diff(Y), col = "gray", lwd = 3)
acf(diff(Y), na.action = na.pass, lag.max = 60)
## ¿D? ##
forecast::nsdiffs(diff(Y))
plot(diff(diff(Y), lag = frequency(Y)), col = "gray", lwd = 3)
acf(diff(diff(Y), lag = frequency(Y)), na.action = na.pass, lag.max = 60)
fit <- forecast::auto.arima(Y, d = 1, D = 1, max.p = 3, max.q = 2, max.P = 2, max.Q = 1, lambda = NULL)
fit
tsdiag(fit)
LSTS::ts.diag(fit$res)
source("TS.diag.R")
TS.diag(fit$res)
fit <- forecast::Arima(Y, order = c(0,1,3), seasonal = c(0,1,1), fixed = c(NA,0,NA,NA))
fit
TS.diag(fit$res)
pre <- forecast::forecast(fit, h = 9, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre)
Y <- ts(Data$IMACEC_NM, start = c(2013,1), frequency = 12)
lines(Y, col = "red")
Y <- ts(Data$IMACEC_NM, start = c(2013,1), frequency = 12, end = c(2021,12))
Y[trunc(time(Y))>= 2020] = NA
plot(Y, col = "gray", lwd = 3)
fit <- forecast::auto.arima(Y, d = 1, D = 1, max.p = 3, max.q = 2, max.P = 2, max.Q = 1, lambda = NULL)
fit
TS.diag(fit$res)
fit <- forecast::Arima(Y, order = c(0,1,10),
seasonal = c(0,1,1), fixed = c(NA,NA,0,0,0,0,0,0,0,NA, NA), lambda = NULL)
pre <- forecast::forecast(fit, h = 300, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre, xlim = c(2010,2032), ylim = c(70,150))
Y <- ts(Data$IMACEC_NM, start = c(2013,1), frequency = 12)
lines(Y, col = "red")
pre <- forecast::forecast(fit, h = 60, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre, xlim = c(2010,2032), ylim = c(70,150))
Y <- ts(Data$IMACEC_NM, start = c(2013,1), frequency = 12)
lines(Y, col = "red")
pre <- forecast::forecast(fit, h = 60, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre, xlim = c(2010,2025), ylim = c(70,130))
Y <- ts(Data$IMACEC_NM, start = c(2013,1), frequency = 12)
lines(Y, col = "red")
plot(lr[1:72], type = "l")
fit <- forecast::auto.arima(Y[1:36], max.d = 6, max.D = 6, max.p = 6, max.q = 6, max.P = 6, max.Q = 6, lambda = NULL)
summary(fit)
fit <- forecast::auto.arima(Y[37:72], max.d = 6, max.D = 6, max.p = 6, max.q = 6, max.P = 6, max.Q = 6, lambda = NULL)
summary(fit)
Y2 <- ts(df$Dx_6_L_R, start = c(2016,1), frequency = 12, end = c(2018,12))
Y2 <- ts(df$Dx_6_L_R[1:36], start = c(2016,1), frequency = 12, end = c(2018,12))
Y3 <- ts(df$Dx_6_L_R[37:72], start = c(2019,1), frequency = 12, end = c(2021,12))
fit <- forecast::auto.arima(Y2, d = 1, D = 1, max.p = 6, max.q = 5, max.P = 6,
max.Q = 6)
fit <- forecast::auto.arima(Y2, d = 1, D = 1, max.p = 6, max.q = 5, max.P = 6,
max.Q = 6)
summary(fit)
TS.diag(fit$res)
fit <- forecast::auto.arima(Y3, d = 1, D = 1, max.p = 6, max.q = 5, max.P = 6,
max.Q = 6)
fit <- forecast::auto.arima(Y1, d = 1, D = 1, max.p = 6, max.q = 5, max.P = 6,
max.Q = 6)
fit <- forecast::auto.arima(Y3, d = 1, D = 1, max.p = 6, max.q = 5, max.P = 6,
max.Q = 6)
summary(fit)
TS.diag(fit$res)
cusum(Y)
Data
