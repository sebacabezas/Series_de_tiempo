order = c(1,0,0),
seasonal = c(1,1,0),
include.drift = FALSE,
xreg = as.matrix(exogenas1[,2]))
fit4
TS.diag(fit4$res)
fit4
TS.diag(fit4$res)
pre4 <- forecast::forecast(fit4, level = 0.95, xreg = as.matrix(exogenas2[,2]))
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre4, bty = "last", n = 1, main = "", xlab = "año", "ylab" = "consumo")
library(tidyverse)
library(forecast)
library(LSTS)
library(splines)
df = rio::import("data.xlsx")
lr <- df$Dx_6_L_R
r_500 <- df$Dx_6_R500
Y <- ts(df$Dx_6_L_R[1:72], start = c(2016,1), frequency = 12, end = c(2021,12))
Y2 <- ts(df$Dx_6_L_R[1:36], start = c(2016,1), frequency = 12, end = c(2018,12))
Y3 <- ts(df$Dx_6_L_R[37:72], start = c(2019,1), frequency = 12, end = c(2021,12))
df$tiempo = c(1:72, rep(NA, 108))
library(lmtest)
bptest(lm(Y[1:72]~df$tiempo[1:72])) # No rechazamos la no homocedasticidad
# De igual manera intentamos
# Box cox
par(mfrow = c(1,1))
library(car)
fit2 <- forecast::auto.arima(Y, max.d = 6,
max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL)
TS.diag(fit2$res)
source("TS.diag.R")
TS.diag(fit2$res)
fit2
summary)fit2
summary(fit2)
lillie.test(fit2$residuals)
pre <- forecast::forecast(fit2, h = 108, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre, xlim = c(2016,2030), ylim = c(190000, 330000), main = "", n = 1, bty = "las")
ks.test(fit2$residuals, "pnorm")
mean(abs(fit2$residuals)/(abs(Y)))
Y <- ts(df$Dx_6_L_R[1:60], start = c(2016,1), frequency = 12, end = c(2020,12))
fit2 <- forecast::Arima(Y,
order = c(1,0,5),
seasonal = c(2,1,0),
include.drift = TRUE,
fixed = c(NA,NA,0,0,0,NA,NA,NA,NA))
TS.diag(fit2$res)
library(nortest)
lillie.test(fit2$residuals)
pre2 <- forecast::forecast(fit2, h = 100, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre, xlim = c(2016,2030), ylim = c(190000, 310000))
lines(as.vector(time(Y))[1:60], as.vector(fit2$fitted), col = "blue")
Y <- ts(df$Dx_6_L_R[1:72], start = c(2016,1), frequency = 12, end = c(2021,12))
lines(Y, col = "red")
val_cruzada2 = sum(abs(pre2$fitted[1:12])/(abs(Y[61:72])))/12
val_cruzada2
source("TS.diag.R")
df = rio::import("data.xlsx")
lr <- df$Dx_6_L_R
r_500 <- df$Dx_6_R500
Y <- ts(df$Dx_6_L_R[1:72], start = c(2016,1), frequency = 12, end = c(2021,12))
Y2 <- ts(df$Dx_6_L_R[1:36], start = c(2016,1), frequency = 12, end = c(2018,12))
Y3 <- ts(df$Dx_6_L_R[37:72], start = c(2019,1), frequency = 12, end = c(2021,12))
df$tiempo = c(1:72, rep(NA, 108))
library(lmtest)
library(car)
df = rio::import("data.xlsx")
Y <- ts(df$Dx_6_L_R[1:72], start = c(2016,1), frequency = 12, end = c(2021,12))
exogenas1 = data.frame("IMACEC" = df$IMACEC_forecast[1:72],
"Poblacion" = df$Poblacion_comuna[1:72],
"PIB" = df$PIB_var_an_porc[1:72])
exogenas2 = data.frame("IMACEC" = df$IMACEC_forecast[73:length(df$IMACEC_forecast)],
"Poblacion" = df$Poblacion_comuna[73:length(df$IMACEC_forecast)],
"PIB" = df$PIB_var_an_porc[73:length(df$PIB_var_an_porc)])
fit <- forecast::auto.arima(Y, max.d = 6,
max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL,
xreg = as.matrix(exogenas1[,2]))
TS.diag(fit$res)
fit <- forecast::Arima(Y,
order = c(1,0,5),
seasonal = c(2,1,0),
include.drift = FALSE,
fixed = c(NA,NA,0,0,0,NA,NA,NA,NA),
xreg = as.matrix(exogenas1[,2]))
TS.diag(fit$res)
summary(fit)
fit <- forecast::auto.arima(Y, max.d = 6,
max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL,
xreg = as.matrix(exogenas1[,2]))
fit
summary(fit)
fit <- forecast::auto.arima(Y, max.d = 6,
max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL,
xreg = as.matrix(exogenas1[,2]))
TS.diag(fit$res)
summary(fit)
library(nortest)
lillie.test(fit$residuals)
pre <- forecast::forecast(fit, level = 0.95, xreg = as.matrix(exogenas2[,2]))
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre)
fit2 <- forecast::auto.arima(Y, max.d = 6,
max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL)
TS.diag(fit2$res)
# fit2 <- forecast::Arima(Y,
#                       order = c(1,0,7),
#                       seasonal = c(2,1,0),
#                       include.drift = TRUE,
#                       fixed = c(NA,0,0,0,0,0,0,NA,NA,NA,NA))
TS.diag(fit2$res)
library(nortest)
lillie.test(fit2$residuals)
pre <- forecast::forecast(fit2, h = 108, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre, xlim = c(2016,2030), ylim = c(190000, 330000), main = "", n = 1, bty = "las")
ks.test(fit2$residuals, "pnorm")
lillie.test(fit2$residuals)
fit
exogenas1 = data.frame("IMACEC" = df$IMACEC_forecast[1:72],
"Poblacion" = df$Poblacion_comuna[1:72],
"PIB" = df$PIB_var_an_porc[1:72])
exogenas2 = data.frame("IMACEC" = df$IMACEC_forecast[73:length(df$IMACEC_forecast)],
"Poblacion" = df$Poblacion_comuna[73:length(df$IMACEC_forecast)],
"PIB" = df$PIB_var_an_porc[73:length(df$PIB_var_an_porc)])
fit <- forecast::auto.arima(Y, max.d = 6,
max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL,
xreg = as.matrix(exogenas1[,2]))
fit <- forecast::Arima(Y,
order = c(1,0,5),
seasonal = c(2,1,0),
include.drift = FALSE,
fixed = c(NA,NA,0,0,0,NA,NA,NA,NA),
xreg = as.matrix(exogenas1[,3]))
fit <- forecast::auto.arima(Y, max.d = 6,
max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL,
xreg = as.matrix(exogenas1[,2]))
fit
library(ggplot2)
library(dplyr)
df
colnames(df)
Y
# Dummy data
data <- data.frame(
day = as.Date("2016-06-14") - 0:364,
value = runif(365) + seq(-140, 224)^2 / 10000
)
data
time/Y
time(Y)
time(Y)[1:20]
# Dummy data
data <- data.frame(
day = time(Y)[1:length(Y)],
value = Y
)
# Most basic bubble plot
p <- ggplot(data, aes(x=day, y=value)) +
geom_line() + df$
xlab("")
p
data
seq(as.date("2016/1"), as.date("2021/12"))
seq(as.Date("2016/1"), as.Date("2021/12"))
seq(as.Date("2016/1"), as.Date("2021/12"), years)
seq(as.Date("2016/1/1"), as.Date("2021/12/1"), years)
seq(as.Date("2016/1/1"), as.Date("2021/12/1"), "years")
seq(as.Date("2016/1/1"), as.Date("2021/12/1"), "months")
# Dummy data
data <- data.frame(
day = seq(as.Date("2016/1/1"), as.Date("2021/12/1"), "months"),
value = Y
)
# Most basic bubble plot
p <- ggplot(data, aes(x=day, y=value)) +
geom_line() + df$
xlab("")
Y
Y[1:72]
# Dummy data
data <- data.frame(
day = seq(as.Date("2016/1/1"), as.Date("2021/12/1"), "months"),
value = Y[1:72]
)
# Most basic bubble plot
p <- ggplot(data, aes(x=day, y=value)) +
geom_line() + df$
xlab("")
# Dummy data
data <- data.frame(
day = seq(as.Date("2016/1/1"), as.Date("2021/12/1"), "months"),
value = as.vector(Y[1:72])
)
# Most basic bubble plot
p <- ggplot(data, aes(x=day, y=value)) +
geom_line() + df$
xlab("")
library(ggplot2)
library(dplyr)
# Dummy data
data <- data.frame(
day = seq(as.Date("2016/1/1"), as.Date("2021/12/1"), "months"),
value = as.vector(Y[1:72])
)
data# Most basic bubble plot
ggplot(data, aes(x=day, y=value)) +
geom_line() + df$
xlab("")
data# Most basic bubble plot
ggplot(data=data, aes(x=day, y=value)) +
geom_line() + df$
xlab("")
ggplot(data=data, aes(x=day, y=value)) +
geom_line()
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()
fit2$series
fit2$fitted
pre2
pre
pre$x
pre$fitted
pre
pre$mean
# Dummy data
data <- data.frame(
day = seq(as.Date("2016/1/1"), as.Date("2030/12/1"), "months"),
value = as.vector(c(Y[1:72]), pre$mean)
)
# Dummy data
data <- data.frame(
day = seq(as.Date("2016/1/1"), as.Date("2030/12/1"), "months"),
value = as.vector(c(Y[1:72]), as.vector(pre$mean))
)
as.vector(pre$mean)
c(Y[1:72])
value = as.vector(c(Y[1:72]), as.vector(pre$mean))
# Dummy data
data <- data.frame(
day = seq(as.Date("2016/1/1"), as.Date("2030/12/1"), "months"),
value = as.vector(c(Y[1:72], as.vector(pre$mean)))
)
data
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()
xlab("")
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()+
xlab("")
p
# Dummy data
data <- data.frame(
day = seq(as.Date("2016/1/1"), as.Date("2030/12/1"), "months"),
value = as.vector(c(Y[1:72], as.vector(pre$mean))),
lower = c(rep(NA,72), c(pre$lower) )
)
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()+
xlab("")+
geom_ribbon(data=data,aes(ymin=lower,ymax=upperr))
p
require(nlme)
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()+
xlab("")+
geom_ribbon(data=data,aes(ymin=lower,ymax=upperr))
p
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()+
xlab("")+
geom_ribbon(data=data,aes(ymin=lower,ymax=upper))
p
# Dummy data
data <- data.frame(
day = seq(as.Date("2016/1/1"), as.Date("2030/12/1"), "months"),
value = as.vector(c(Y[1:72], as.vector(pre$mean))),
lower = c(rep(NA,72), c(pre$lower) ),
upper = c(rep(NA,72), c(pre$upper) )
)
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()+
xlab("")+
geom_ribbon(data=data,aes(ymin=lower,ymax=upper))
p
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()+
xlab("")+
geom_ribbon(data=data,aes(ymin=lower,ymax=upper), alpha = 0.3)
p
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()+
xlab("")+
geom_ribbon(data=data,aes(ymin=lower,ymax=upper), alpha = 0.3, color = "red")
p
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()+
xlab("")+
geom_ribbon(data=data,aes(ymin=lower,ymax=upper), alpha = 0.3)
p
p = ggplot(data=data, aes(x=day, y=value)) +
geom_line()+
xlab("años")+
geom_ribbon(data=data,aes(ymin=lower,ymax=upper), alpha = 0.3)
p
library(tidyverse)
library(forecast)
library(LSTS)
library(splines)
df = rio::import("data.xlsx")
lr <- df$Dx_6_L_R
r_500 <- df$Dx_6_R500
Y <- ts(df$Dx_6_R500, start = c(2016,1), frequency = 12, end = c(2021,12))
exogenas1 = data.frame("IMACEC" = df$IMACEC_forecast[1:72],
"Poblacion" = df$Poblacion_comuna[1:72],
"PIB" = df$PIB_var_an_porc[1:72])
exogenas2 = data.frame("IMACEC" = df$IMACEC_forecast[73:length(df$IMACEC_forecast)],
"Poblacion" = df$Poblacion_comuna[73:length(df$IMACEC_forecast)],
"PIB" = df$PIB_var_an_porc[73:length(df$PIB_var_an_porc)])
#fit <- forecast::auto.arima(Y, max.d = 6, max.D = 6, max.p = 6, max.q = 6,
#                            max.P = 6, max.Q = 6, lambda = NULL,
#                            xreg = as.matrix(exogenas1[,2]))
fit <- forecast::auto.arima(Y, max.d = 6, max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL)
exogenas1 = data.frame("IMACEC" = df$IMACEC_forecast[1:72],
"Poblacion" = df$Poblacion_comuna[1:72],
"PIB" = df$PIB_var_an_porc[1:72])
exogenas2 = data.frame("IMACEC" = df$IMACEC_forecast[73:length(df$IMACEC_forecast)],
"Poblacion" = df$Poblacion_comuna[73:length(df$IMACEC_forecast)],
"PIB" = df$PIB_var_an_porc[73:length(df$PIB_var_an_porc)])
#fit <- forecast::auto.arima(Y, max.d = 6, max.D = 6, max.p = 6, max.q = 6,
#                            max.P = 6, max.Q = 6, lambda = NULL,
#                            xreg = as.matrix(exogenas1[,2]))
fit <- forecast::auto.arima(Y, max.d = 6, max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL)
summary(fit)
TS.diag(fit$res)
pre <- forecast::forecast(fit, h = 100, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre)
lines(Y, col = "red")
plot(pre, bty = "las", n = 1)
plot(pre, bty = "las", n = 1, main = "")
df = rio::import("data.xlsx")
lr <- df$Dx_6_L_R
r_500 <- df$Dx_6_R500
Y <- ts(df$Dx_6_R500, start = c(2016,1), frequency = 12, end = c(2021,12))
source("TS.diag.R")
exogenas1 = data.frame("IMACEC" = df$IMACEC_forecast[1:72],
"Poblacion" = df$Poblacion_comuna[1:72],
"PIB" = df$PIB_var_an_porc[1:72],
"auxiliar" = df$Dx_6_L_R[1:72])
exogenas2 = data.frame("IMACEC" = df$IMACEC_forecast[73:length(df$IMACEC_forecast)],
"Poblacion" = df$Poblacion_comuna[73:length(df$IMACEC_forecast)],
"PIB" = df$PIB_var_an_porc[73:length(df$PIB_var_an_porc)],
"auxiliar" = auxiliar2)
exogenas2 = data.frame("IMACEC" = df$IMACEC_forecast[73:length(df$IMACEC_forecast)],
"Poblacion" = df$Poblacion_comuna[73:length(df$IMACEC_forecast)],
"PIB" = df$PIB_var_an_porc[73:length(df$PIB_var_an_porc)])
Y <- ts(df$Dx_6_R500[1:72], start = c(2016,1), frequency = 12, end = c(2021,12))
fit4 <- forecast::auto.arima(Y, max.d = 1, max.D = 1, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL, xreg = as.matrix(exogenas1[,2]))
fit4
fit4 <- forecast::Arima(Y,
order = c(1,0,0),
seasonal = c(1,1,0),
include.drift = FALSE,
xreg = as.matrix(exogenas1[,2]))
fit4
TS.diag(fit4$res)
fit4
TS.diag(fit4$res)
summary(fit4)
df = rio::import("data.xlsx")
lr <- df$Dx_6_L_R
r_500 <- df$Dx_6_R500
Y <- ts(df$Dx_6_R500, start = c(2016,1), frequency = 12, end = c(2021,12))
Y <- ts(df$Dx_6_R500[1:72], start = c(2016,1), frequency = 12, end = c(2021,12))
fit4 <- forecast::auto.arima(Y, max.d = 1, max.D = 1, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL, xreg = as.matrix(exogenas1[,2]))
fit4
fit4
summary(fit4)
fit4 <- forecast::Arima(Y,
order = c(1,0,0),
seasonal = c(1,1,0),
include.drift = FALSE,
xreg = as.matrix(exogenas1[,2]))
fit4
TS.diag(fit4$res)
fit4
TS.diag(fit4$res)
pre4 <- forecast::forecast(fit4, level = 0.95, xreg = as.matrix(exogenas2[,2]))
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre4, bty = "last", n = 1, main = "", xlab = "año", "ylab" = "consumo")
coeftest(fit4)
summary(fit4)
Y <- ts(df$Dx_6_R500[1:72], start = c(2016,1), frequency = 12, end = c(2021,12))
fit4 <- forecast::auto.arima(Y, max.d = 1, max.D = 1, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL, xreg = as.matrix(exogenas1[,2]))
fit4
fit4
fit4 <- forecast::Arima(Y,
order = c(1,0,0),
seasonal = c(1,1,0),
include.drift = TRUE,
xreg = as.matrix(exogenas1[,2]))
fit4
TS.diag(fit4$res)
pre4 <- forecast::forecast(fit4, level = 0.95, xreg = as.matrix(exogenas2[,2]))
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre4, bty = "last", n = 1, main = "", xlab = "año", "ylab" = "consumo")
fit4 <- forecast::Arima(Y,
order = c(1,0,0),
seasonal = c(1,1,0),
include.drift = FALSE,
xreg = as.matrix(exogenas1[,2]))
fit4
TS.diag(fit4$res)
fit4
TS.diag(fit4$res)
pre4 <- forecast::forecast(fit4, level = 0.95, xreg = as.matrix(exogenas2[,2]))
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre4, bty = "last", n = 1, main = "", xlab = "año", "ylab" = "consumo")
# ajustes -----------------------------------------------------------------
# MAPE FIT
mean(abs(fit$residuals)/(abs(Y)))
# MAPE FIT4
mean(abs(fit4$residuals)/(abs(Y)))
pre <- forecast::forecast(fit, h = 100, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre)
lines(Y, col = "red")
Y <- ts(df$Dx_6_R500[1:72], start = c(2016,1), frequency = 12, end = c(2021,12))
fit <- forecast::auto.arima(Y, max.d = 6, max.D = 6, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL)
fit = forecast::auto.arima(Y)
summary(fit)
TS.diag(fit$res)
pre <- forecast::forecast(fit, h = 100, level = 0.95)
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre)
lines(Y, col = "red")
Y <- ts(df$Dx_6_R500[1:72], start = c(2016,1), frequency = 12, end = c(2021,12))
val_cruzada = sum(abs(pre$fitted[1:12]-Y[61:72]))/12
lillie.test(fit$residuals)
# ajustes -----------------------------------------------------------------
# MAPE FIT
mean(abs(fit$residuals)/(abs(Y)))
# MAPE FIT4
mean(abs(fit4$residuals)/(abs(Y)))
plot(pre4, xlim = c(2016,2031), ylim = c(50000, 250000))
exogenas1 = data.frame("IMACEC" = df$IMACEC_forecast[1:72],
"Poblacion" = df$Poblacion_comuna[1:72],
"PIB" = df$PIB_var_an_porc[1:72],
"auxiliar" = df$Dx_6_L_R[1:72])
exogenas2 = data.frame("IMACEC" = df$IMACEC_forecast[73:length(df$IMACEC_forecast)],
"Poblacion" = df$Poblacion_comuna[73:length(df$IMACEC_forecast)],
"PIB" = df$PIB_var_an_porc[73:length(df$PIB_var_an_porc)])
Y <- ts(df$Dx_6_R500[1:72], start = c(2016,1), frequency = 12, end = c(2021,12))
fit4 <- forecast::auto.arima(Y, max.d = 1, max.D = 1, max.p = 6, max.q = 6,
max.P = 6, max.Q = 6, lambda = NULL, xreg = as.matrix(exogenas1[,2]))
fit4
fit4 <- forecast::Arima(Y,
order = c(1,0,0),
seasonal = c(1,1,0),
include.drift = FALSE,
xreg = as.matrix(exogenas1[,2]))
fit4
TS.diag(fit4$res)
fit4
TS.diag(fit4$res)
pre4 <- forecast::forecast(fit4, level = 0.95, xreg = as.matrix(exogenas2[,2]))
par(mfrow = c(1,1), bty = "n", las = 1, font.main = 1)
plot(pre4, bty = "last", n = 1, main = "", xlab = "año", "ylab" = "consumo")
coeftest(fit4)
plot(pre4, bty = "last", n = 1, main = "")
pacf(lr.ts,lag=100)
df = rio::import("data.xlsx")
lr <- df$Dx_6_L_R
r_500 <- df$Dx_6_R500
pacf(lr.ts,lag=100)
lr.ts <- ts(lr,start=c(2016,01), end=c(2021,12), frequency = 12)
pacf(lr.ts,lag=100)
pacf(lr.ts,lag=100, lwd = 2)
pacf(lr.ts,lag=100, lwd = 2, main = "")
r500.ts <- ts(r_500,start=c(2016,01), end=c(2021,12), frequency = 12)
pacf(r500.ts,lag=100, lwd = 2, main = "")
pacf(lr.ts,lag=100, lwd = 2, main = "")
pacf(r_500,lag=100, lwd = 2, main = "")
pacf(lr.ts,lag=100)
pacf(r500.ts,lag=100, lwd = 2, main = "")
r500
r500.ts
plot(r500.ts)
pacf(r500.ts,lag=100, lwd = 2, main = "")
pacf(lr.ts,lag=100, lwd = 2, main = "")
pacf(r500.ts,lag=100, lwd = 2, main = "")
pacf(r500.ts,lag=100, lwd = 2, main = "")
pacf(lr.ts,lag=100, lwd = 2, main = "")
pacf(r500.ts,lag=100, lwd = 2, main = "")
pacf(lr.ts,lag=100, lwd = 2, main = "")
pacf(r500.ts,lag=100, lwd = 2, main = "")
